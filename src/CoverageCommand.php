<?php

declare(strict_types=1);

namespace App;

use InvalidArgumentException;
use SimpleXMLElement;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

/**
 * Class CoverageCommand
 *
 * @author  Joe Mizzi <joe@casechek.com>
 */
class CoverageCommand extends Command
{
    /**
     * Configure the command.
     */
    protected function configure()
    {
        $this->setName('coverage');
        $this->setDescription('Checks code coverage percentage from a clover xml file generated by PHPUnit.');
        $this->addArgument('file', InputArgument::REQUIRED, 'The coverage file in xml.');
        $this->addArgument('percentage', InputArgument::REQUIRED, 'The minimum acceptable code coverage percentage.');
    }

    /**
     * @param InputInterface $input
     * @param OutputInterface $output
     * @return int
     */
    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $inputFile = $input->getArgument('file');
        $percentage = min(100, max(0, (int)$input->getArgument('percentage')));

        if (!file_exists($inputFile)) {
            throw new InvalidArgumentException('Invalid input file provided');
        }

        $xml = new SimpleXMLElement(file_get_contents($inputFile));
        $metrics = $xml->xpath('//metrics');
        $totalElements = 0;
        $checkedElements = 0;

        foreach ($metrics as $metric) {
            $totalElements += (int)$metric['elements'];
            $checkedElements += (int)$metric['coveredelements'];
        }

        $coverage = ($checkedElements / $totalElements) * 100;
        if ($coverage < $percentage) {
            $output->writeln(sprintf('<error>Code coverage is %d%%, which is below the accepted %d%%</error>', $coverage, $percentage));
            return 1;
        }

        $output->writeln(sprintf('Code coverage is %d%% - OK!', $coverage));
        return null;
    }
}
