#!/usr/bin/env php
<?php

/**
 * Checks for code coverage minimum in a clover xml file.
 *
 * @author  Joe Mizzi <joe@casechek.com>
 *
 * Adapted from https://ocramius.github.io/blog/automated-code-coverage-check-for-github-pull-requests-with-travis/
 */

declare(strict_types=1);

$autoloadFiles = [__DIR__ . '/../vendor/autoload.php', __DIR__ . '/../../../autoload.php'];

foreach ($autoloadFiles as $autoloadFile) {
    if (file_exists($autoloadFile)) {
        require_once $autoloadFile;
    }
}

use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

(new Application('coverage', '1.0.0'))
    ->register('coverage')
    ->setDescription('Checks code coverage percentage from a clover xml file generated by PHPUnit.')
    ->addArgument('file', InputArgument::REQUIRED, 'The coverage file in xml.')
    ->addArgument('percentage', InputArgument::REQUIRED, 'The minimum acceptable code coverage percentage.')
    ->setCode(function (InputInterface $input, OutputInterface $output) {
        $inputFile = $input->getArgument('file');
        $percentage = min(100, max(0, (int)$input->getArgument('percentage')));

        if (!file_exists($inputFile)) {
            throw new InvalidArgumentException('Invalid input file provided');
        }

        $xml = new SimpleXMLElement(file_get_contents($inputFile));
        $metrics = $xml->xpath('//metrics');
        $totalElements = 0;
        $checkedElements = 0;

        foreach ($metrics as $metric) {
            $totalElements += (int)$metric['elements'];
            $checkedElements += (int)$metric['coveredelements'];
        }

        $coverage = ($checkedElements / $totalElements) * 100;
        if ($coverage < $percentage) {
            $output->writeln(sprintf('<error>Code coverage is %d%%, which is below the accepted %d%%</error>', $coverage, $percentage));
            return 1;
        }

        $output->writeln(sprintf('Code coverage is %d%% - OK!', $coverage));
        return null;
    })
    ->getApplication()
    ->setDefaultCommand('coverage', true)// Single command application
    ->run();

